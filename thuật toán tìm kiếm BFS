#include <iostream>
#include <vector>
#include <queue>

using namespace std;

#define MAX 101

int n, m;
vector<int> adj[MAX];
bool visited[MAX];

void inpuut() {
	cout << "Nhap vao so luong dinh: ";
	cin >> n;
	cout << "NHap vao so luong canh: ";
	cin >> m;
	for (int i = 0; i < m; i++) {
		int x, y; cin >> x >> y;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	memset(visited, false, sizeof(visited));
}

void bfs(int u) {
	queue<int> q;
	q.push(u);
	visited[u] = true;
	while (!q.empty()) {
		int v = q.front();
		q.pop();
		cout << v << " ";
		for (int x : adj[v]) {
			if (!visited[x]) {
				q.push(x);
				visited[x] = true;
			}
		}
	}
}

int main() {
	inpuut();
	bfs(1);
	system("pause");
	return 0;
}
