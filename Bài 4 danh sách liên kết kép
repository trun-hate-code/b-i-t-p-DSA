#include <iostream>
#include <string>

using namespace std;

struct Node
{
	int value;
	Node *next;
	Node *prev;
};

struct DsLkKep
{
	Node *head;
	Node *tail;
};

void init(DsLkKep &ls) {
	ls.head = NULL;
	ls.tail = NULL;
}

Node* createdNode(int x) {
	Node *p = new Node;
	p->value = x;
	p->next = NULL;
	p->prev = NULL;
	return p;
}

void addFirst(DsLkKep &ls) {
	int x;
	cin >> x;
	Node *p = createdNode(x);
	if (ls.head == NULL) {
		ls.head = ls.tail = p;
	}
	else {
		Node *p = createdNode(x);
		p->next = ls.head;
		ls.head->prev = p;
		ls.head = p;
	}
}

void insertList(DsLkKep &ls) {
	int n;
	cout << "Nhap so luong phan tu: ";
	cin >> n;
	for (int i = 0; i < n; i++) {
		cout << "Phan tu thu " << i << ":";
		addFirst(ls);
	}
}

void outputList(const DsLkKep ls) {
	Node *p = ls.head;
	while (p != NULL) {
		cout << p->value << " ";
		p = p->next;
	}
	cout << endl;
}

void addLast(DsLkKep &ls) {
	int x;
	cout << "NHap phan tu can them: ";
	cin >> x;
	Node *p = createdNode(x);
	ls.tail->next = p;
	p->prev = ls.tail;
	ls.tail = p;
	cout << "Danh sach sau khi them: ";
	outputList(ls);
}

void deleteFirst(DsLkKep &ls) {
	Node *p = ls.head;
	ls.head = p->next;
	p->next->prev = NULL;
	p->next = NULL;
	delete(p);
	cout << "Danh sach sau khi xoa: ";
	outputList(ls);
}

void deleteLast(DsLkKep &ls) {
	Node *p = ls.tail;
	ls.tail = p->prev;
	p->prev->next = NULL;
	p->prev = NULL;
	delete(p);
	cout << "Danh sach sau khi xoa: ";
	outputList(ls);
}

void deleteFind(DsLkKep &ls) {
	int x;
	cout << "Nhap phan tu can xoa: ";
	cin >> x;
	Node *p = ls.head;
	Node *q = NULL;
	while (p->value != x && p->next != NULL) {
			q = p;
			p = p->next;
		}
		q->next = p->next;
		p->next->prev = p->prev;
		delete(p);
	cout << "Danh sach sau khi xoa: ";
	outputList(ls);
}

int main() {
	cout << "<---------------MENU--------------->" << endl;
	cout << "1. Khai bao danh sach rong " << endl;
	cout << "2. Xuat cac phan tu trong danh sach " << endl;
	cout << "3. Them phan tu vao dau danh sach " << endl;
	cout << "4. Them phan tu vao cuoi danh sach " << endl;
	cout << "5. Xoa phan tu dau danh sach " << endl;
	cout << "6. Xoa phan tu cuoi danh sach " << endl;
	cout << "7. Tim va xoa phan tu" << endl;
	DsLkKep ls;
	int require;
	cout << "Nhap vao yeu cau can lam: ";
	cin >> require;
	do
	{
		switch (require)
		{
		case(1):
			init(ls);
			cout << "Da khai bao " << endl;
			insertList(ls);
			cout << "Nhap chuc nang tiep theo: ";
			cin >> require;
			break;
		case(2):
			outputList(ls);
			cout << "Nhap chuc nang tiep theo: ";
			cin >> require;
			break;
		case(3):
			cout << "Nhap phan tu can them: ";
			addFirst(ls);
			outputList(ls);
			cout << "Chuc nang tiep theo: ";
			cin >> require;
			break;
		case(4):
			addLast(ls);
			cout << "Chuc nang tiep theo: ";
			cin >> require;
			break;
		case(5):
			deleteFirst(ls);
			cout << "Chuc nangg tiep theo: ";
			cin >> require;
			break;
		case(6):
			deleteLast(ls);
			cout << "Chuc nang tiep theo: ";
			cin >> require;
			break;
		case(7):
			deleteFind(ls);
			cout << "Chuc nang tiep theo: ";
			cin >> require;
			break;
		default:
			break;
		}
	} while (require != 0);
	system("pause");
	return 0;
}
